version: "3.8"

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka 
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  webview:
    container_name: ts_microservice_webview
    image: sourcelaborg/kafka-webview
    expose:
      - 8080
    ports:
      - '3331:8080'
    links:
      - kafka
  mongo1:
    container_name: mongo1
    image: mongo:5.0.5
    volumes:
      - ./scripts/replica-set-init.sh:/scripts/replica-set-init.sh:x
      - ./scripts/init.js:/scripts/init.js
    networks:
      - mongo-cluster-network
    ports:
      - 27017:27017
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "cluster-dbrs" ]

  mongo2:
    container_name: mongo2
    image: mongo:5.0.5
    networks:
      - mongo-cluster-network
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "cluster-dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo:5.0.5
    networks:
      - mongo-cluster-network
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "cluster-dbrs" ]

networks:
  mongo-cluster-network:
    driver: bridge
